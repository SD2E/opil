# baseURI: http://bbn.com/synbio/opil/shacl
# imports: http://bbn.com/synbio/opil
# imports: http://www.ontology-of-units-of-measure.org/resource/om-2/
# prefix: shacl

@prefix om: <http://www.ontology-of-units-of-measure.org/resource/om-2/> .
@prefix opil: <http://bioprotocols.org/opil/v1#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix shacl: <http://bbn.com/synbio/opil/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://bbn.com/synbio/opil/shacl>
  a owl:Ontology ;
  owl:imports <http://bbn.com/synbio/opil> ;
  owl:imports <http://datashapes.org/dash> ;
  owl:versionInfo "1.0" ;
  sh:declare opil:PrefixDeclaration ;
.

opil:PrefixDeclaration
  a sh:PrefixDeclaration ;
  sh:namespace "http://bioprotocols.org/opil/v1#"^^xsd:anyURI ;
  sh:prefix "opil" ;
.

# The following shapes apply to Parameters and are useful for
# validating ProtocolInterfaces

# Parameters have only one name and it must be a string
shacl:ParameterShape
	a sh:NodeShape ;
	sh:targetClass opil:Parameter ;
	sh:property [
		sh:path opil:name ;
		sh:maxCount 1 ;
		sh:datatype xsd:string ;
	] ;
.

# Measure parameters have only one max value and it must be an om:Measure
# Similarly for min value
shacl:MeasureParameterShape
	a sh:NodeShape ;
	sh:targetClass opil:MeasureParameter ;
	sh:property [
		sh:path opil:maxMeasure ;
		sh:maxCount 1 ;
		sh:class om:Measure ;
	] ;
	sh:property [
		sh:path opil:minMeasure ;
		sh:maxCount 1 ;
		sh:class om:Measure ;
	] ;
.

# Integer parameters have only one max value and it must be an int
# Similarly for min value
shacl:IntegerParameterShape
	a sh:NodeShape ;
	sh:targetClass opil:IntegerParameter ;
	sh:property [
		sh:path opil:maxValue ;
		sh:maxCount 1 ;
		sh:datatype xsd:integer ;
	] ;
	sh:property [
		sh:path opil:minValue ;
		sh:maxCount 1 ;
		sh:datatype xsd:integer ;
	] ;
.

# The following apply to ParameterValues

# Measure parameter values have only one measure and it must be an
# om:Measure, and can only be the value of a single MeasureParameter.
# The numerical value of the measure must be within bounds
shacl:MeasureValueShape
    a sh:NodeShape ;
    sh:targetClass opil:MeasureValue ;
    sh:property [
        sh:path opil:hasMeasure ;
        sh:maxCount 1 ;
        sh:class om:Measure ;
    ] ;
    sh:property [
        sh:path opil:valueOf ;
        sh:maxCount 1 ;
        sh:class opil:MeasureParameter ;
    ] ;
    sh:sparql [
    sh:message "MeasureValue has no measure" ;
    sh:prefixes <http://bioprotocols.org/opil/v1#> ;
    sh:select """
    select $this where
    {
          FILTER NOT EXISTS {$this opil:hasMeasure ?measure}
    }
    """ ;
    ] ;
    sh:sparql [
      sh:message "MeasureValue measure numerical value exceeds maximum" ;
      sh:prefixes <http://bioprotocols.org/opil/v1#> ;
      sh:select """
      select $this where
      {
          $this opil:hasMeasure ?meas ;
                opil:valueOf ?param .
          ?param opil:maxMeasure ?max .
          ?max om:hasNumericalValue ?maxVal .
          ?meas om:hasNumericalValue ?val .
          FILTER (?val > ?maxVal)
      }
      """ ;
    ] ;
    sh:sparql [
      sh:message "MeasureValue measure numerical value less than minimum" ;
      sh:prefixes <http://bioprotocols.org/opil/v1#> ;
      sh:select """
      select $this where
      {
          $this opil:hasMeasure ?meas ;
                opil:valueOf ?param .
          ?param opil:minMeasure ?min .
          ?min om:hasNumericalValue ?minVal .
          ?meas om:hasNumericalValue ?val .
          FILTER (?val < ?minVal)
      }
      """ ;
    ] ;
.

# Boolean parameter values must have exactly one value and it must be a boolean
# and can only be the value of a single boolean parameter
shacl:BooleanValueShape
	a sh:NodeShape ;
	sh:targetClass opil:BooleanValue ;
	sh:property [
		sh:path opil:value ;
		sh:maxCount 1 ;
		sh:datatype xsd:boolean ;
	] ;
	sh:property [
		sh:path opil:valueOf ;
		sh:maxCount 1 ;
		sh:class opil:BooleanParameter ;
	] ;
    sh:sparql [
      sh:message "BooleanValue has no value" ;
      sh:prefixes <http://bioprotocols.org/opil/v1#> ;
      sh:select """
      select $this where
      {
          FILTER NOT EXISTS {$this opil:value ?value}
       }
       """ ;
    ] ;
.

# Integer parameter values must have exactly one value and it must be an int
# and can only be the value of a single integer parameter. Furthermore, its
# value must be within bounds
shacl:IntegerValueShape
	a sh:NodeShape ;
	sh:targetClass opil:IntegerValue ;
	sh:property [
		sh:path opil:value ;
		sh:maxCount 1 ;
		sh:datatype xsd:integer ;
	] ;
	sh:property [
		sh:path opil:valueOf ;
		sh:maxCount 1 ;
		sh:class opil:IntegerParameter ;
	] ;
     sh:sparql [
      sh:message "IntegerValue has no value" ;
      sh:prefixes <http://bioprotocols.org/opil/v1#> ;
      sh:select """
      select $this where
      {
          FILTER NOT EXISTS {$this opil:value ?value}
      }
      """ ;
    ] ;
     sh:sparql [
      sh:message "IntegerValue value exceeds maximum" ;
      sh:prefixes <http://bioprotocols.org/opil/v1#> ;
      sh:select """
      select $this where
      {
          $this opil:value ?value ;
                opil:valueOf ?param .
          ?param opil:maxValue ?max .
          FILTER (?value > ?max)
      }
      """ ;
    ] ;
     sh:sparql [
      sh:message "IntegerValue value less than minimum" ;
      sh:prefixes <http://bioprotocols.org/opil/v1#> ;
      sh:select """
      select $this where
      {
          $this opil:value ?value ;
                opil:valueOf ?param .
          ?param opil:minValue ?min .
          FILTER (?value < ?min)
      }
      """ ;
    ] ;
.

# String parameter values must have exactly one value and it must be a string
# and can only be the value of a single string parameter
shacl:StringValueShape
	a sh:NodeShape ;
	sh:targetClass opil:StringValue ;
	sh:property [
		sh:path opil:value ;
		sh:maxCount 1 ;
		sh:datatype xsd:string ;
	] ;
	sh:property [
		sh:path opil:valueOf ;
		sh:maxCount 1 ;
		sh:class opil:StringParameter ;
	] ;
      sh:sparql [
      sh:message "StringValue has no value" ;
      sh:prefixes <http://bioprotocols.org/opil/v1#> ;
      sh:select """
      select $this where
      {
          FILTER NOT EXISTS {$this opil:value ?value}
      }
      """ ;
    ] ;
.

# URI parameter values must have exactly one value and it must be a URI
# and can only be the value of a single URI parameter
shacl:URIValueShape
	a sh:NodeShape ;
	sh:targetClass opil:URIValue ;
	sh:property [
		sh:path opil:value ;
		sh:maxCount 1 ;
		sh:datatype xsd:anyURI ;
	] ;
	sh:property [
		sh:path opil:valueOf ;
		sh:maxCount 1 ;
		sh:class opil:URIParameter ;
	] ;
      sh:sparql [
      sh:message "URIValue has no value" ;
      sh:prefixes <http://bioprotocols.org/opil/v1#> ;
      sh:select """
      select $this where
      {
          FILTER NOT EXISTS {$this opil:value ?value}
      }
      """ ;
    ] ;
.

# The following shapes are based on SPARQL

# ExperimentalRequests must have values for all required Parameters for
# their ProtocolInterface
opil:ExperimentalRequestShape
  a sh:NodeShape ;
  sh:targetClass opil:ExperimentalRequest ;
  sh:severity sh:Violation ;
  sh:sparql [
      sh:message "Experimental request is missing a value for  a required parameter" ;
      sh:prefixes <http://bioprotocols.org/opil/v1#> ;
      sh:select """
      select $this where
      {
          $this opil:instanceOf ?protoInt .
          ?protoInt opil:hasParameter ?param.
          ?param opil:required true.
          FILTER NOT EXISTS {?paramValue opil:valueOf ?param}
      }
      """ ;
] ;
.

# The following shape shows how to embed SPARQL into a shape description

# Measurements cannot have more timepoints than the allowed maximum
opil:MeasurementShape
  a sh:NodeShape ;
  sh:targetClass opil:Measurement ;
  sh:severity sh:Violation ;
  sh:sparql [
      sh:message "Measurement has too many time points" ;
      sh:prefixes <http://bioprotocols.org/opil/v1#> ;
      sh:select """
      select $this ?tCount ?max where
	  {
	  	$this opil:measurementType ?type.
    	?type opil:maxMeasurements ?max.
		{
		SELECT $this (COUNT(?t) as ?tCount) WHERE
			{
  			$this opil:time ?t 
			}
		GROUP BY $this
		}
	FILTER (?tCount > ?max)
    }
    """ ;
] ;
.
